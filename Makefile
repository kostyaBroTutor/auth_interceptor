docker_image_for_generating = docker_image_for_generating
pwd = $(PWD)

help: ## Show this help.
## --------------------------------------------------------------------------
	@sed -ne '/@sed/!s/## //p' $(MAKEFILE_LIST)

test: ##        Run tests.
	go test -race -bench=. -benchmem ./...

lint: ##        Run linters for project using golangci-lint on this machine.
	golangci-lint run -v

lint_docker: ## Run linter in the docker.
	docker run --rm -v $(pwd):/app -w /app --env GOTAGS=testdocker golangci/golangci-lint:v1.52.2 golangci-lint run -v

ci: ##          Run CI local, needs docker.
## --------------------------------------------------------------------------
	go mod tidy
	go mod vendor
	make generate
	make lint_docker

generate: ## Create all missing/autogenerated files.
##           This task will leave the image.
##           You can remove this image using `make _remove_ci_image` command.
## --------------------------------------------------------------------------
	make _build_image_for_generation
	make __generate_code

ginkgo_run: ## Run ginkgo tests.
	ACK_GINKGO_DEPRECATIONS=2.6.1 ginkgo run \
		--tags testdocker \
		--succinct \
		--output-interceptor-mode=none -
		-trace -r -p

ginkgo_watch: ## Run ginkgo watch for tests.
	ACK_GINKGO_DEPRECATIONS=2.6.1 ginkgo watch \
		--tags testdocker \
		--vv \
		--output-interceptor-mode=none \
		--trace -r -p

_build_image_for_generation: ##  Build docker image for ci.
##                               Docker must be started.
	docker build \
		--tag $(docker_image_for_generating) \
		--file docker/generator.dockerfile .

__generate_code: ##              Build all proto files, and mocks.
##                               Image for generating must be exists.
	docker run \
		--volume $(pwd):/code \
		--name auth_interceptor_code_generator \
		--rm \
		--workdir /code \
		$(docker_image_for_generating) \
		./scripts/build_protobuf_and_mocks.sh

_remove_image_for_generation: ## Remove docker image for generating code.
##                               Docker must be started.
	docker rmi $(docker_image_for_generating)
